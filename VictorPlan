# faiz
Короче говоря.. говорить буду долго.. Обычно пишу этот документ либо дома в свободное время, либо на работе в обеденный перерыв. 
Я в айти не долго но примерно вижу какие направления, и какие языки востребованы, модны, и какими рынок уже насытился.
                                                          
Вот тебе структура в моеv представлении нынешнего IT в Украине: 
ТРИ ОСНОВНЫЕ ЧАСТИ: ВЕБ-РАЗРАБОТКА, МОБИЛЬНАЯ РАЗРАБОТКА, ДЕСКТОПНАЯ РАЗРАБОТКА. Само собой есть и другий мелковатые направления, да и
эти три основные часто между собой переплетаются.

1. ВЕБ-РАЗРАБОТКА(по сути разработка сайтов) 
   1) Front-end developer - это разработка морды, тоесть веб дизайнер если говорить грубо, 
      хотя "веб-дизайнер" это чуть другое, он ваще на фотошопе работает. А фронт-енд девелопер - ОН ПИШЕТ КОД)
      (тут выбора нету, в обязательном порядке надо знать Javascript, HTML, CSS, я это к тому скзаал, что в бекенде есть большой выбор)
   2) Back-end developer  - это разработка мозгов сайта(сервера). Разработчик на этом уровне пишет то как сайт(точнее его сервер) будет
                            обрабатывать твои запросы. Обычно самая крупная часть проекта.
                            Вот тебе пример Вконтакте. Например я отправляю тебе сообщение в диалог, это сообщение нужно доставить тебе 
                            на телефон, на ПК, сказатьмне онлайн ты или нет, доставленно сообщение или нет, проверить на спам или флуд,
                            проверить на безопасность, и потом сохранить в базе данных. 
                            В данном случае у вас есть выбор, и выбираете только один язык: 
                            PHP, быдлокодеры, сложность = легкая, но получаете на 30% меньше по зп по началу. но с пятью годами опыта 
                            все выравнивается, как зарплата, так и руки-крюки.
                            Ruby, вакансии есть, вроде, браться не стоит, а то еще пропадет через лет 5.. и придется менять язык.
                            C#, сложность - средняя, считайте что это середина, вакансии есть, технологии хорошо описанные. Сказка..
                            Java, сложность - сложная, сам язык - легкий, но количество технологий и инструментов написанных на нем 
                                  прсто зашкаливает, и половину из них нужно знать, это если личной жизни нету то можно учить, зато 
                                  зарплата больше на 15-20%. Конкуренция огромная мествапще нет. Если уж вам так нравится сама Джава, то идите пишите не в веб разработку, а на Андроид 
                                  лучше. Это как китайский, научится рисовать иероглифы легко, но их слишком много чтоб запомнить.
                            Python, сложность - очень легкпй, вакансий чуть меньше чем на С#, и будет поэтому чутку сложнее 
                                  устроиться. А вообще изи ваще учить его.
                            Scala, сложность - пиздец сложная, какие-то магические люди, по секрету мне сказали что они и правда 
                                  существуют, зарплаты наверно на 40 % больше чем у остальных. Твиттер кстати перешел с Руби на Скалу.
                            
   2) Database administrator - человек который проектирует базу данных, данный хранятся в виде множества таблиц. Он проектируют какие 
                               они будут.
   По сути если фронтендщикам надо знать чтото из бекенда, а бекендщикам немного из фронтенда, то датабейс админам надо знать только свое,
   и ничего больше.
  
2. 2. МОБИЛЬНАЯ РАЗРАБОТКА. 
  1) Android(java) - тут объяснять особо не нужно ничего. Единственное что скажу что если кто захочет, кто получит этот файл работать
                    не на том языке на котором я сказал, а под андроид, то могу накидать инфы и про него, + я хоть и бекенд девелопер,
                    но пишу я на Java, поэтому хоть и направления различны, зато язык один(такое не часто бывает). То есть Java 
                    используется в разных, в основном в двух направлениях. 
  2) IOS(Objective-C, Swift) - язык может чутку легче сем с++ , без подготовки универской не советую.
3. Desktop-ное ПО - это по сути все то что ты можешь установить на компьютер( на Windows or Linux). Обычно пишется на С или С++. 
                    Под понятие десктопное програм. обеспеч. попадают например все игры в которые ты играл когда либо.. они 
                    устанавливаются на ПК, и написаны преймущественно на С++. (CS, PB, Dota, варфейсы или как там их..ну короч ты понял.)

Теперь поговорим о более интересных для вас вещах: об зарплата =).

Я не буду называть определенные цифры сейчас, для этого есть диаграммы, а я пишу это в текстовом файле на github, тут ничего вставлять 
нельзя, ну типо там диаграмку или фотку. пока я не прийду домой и не закину в Ворд в формат .docx .
Если взять за 100 % зарплату бекенд разработчика на языках (python, ruby, php ) то построим такой список: 
*  средний бекенд разработчик получает как сказанно выше уже было 100%
   Некоторое уточнение: С# backend - 105 % и Java backend (эта Я маафака) - 115 %
* фронт-енд разработчик получает 100-105% ( используемый стек технологий : Javascript, HTML, CSS) 
  Кстати не путайте javascript b java, они совсем не похожи, ъотя.. если считать 4 буквы в названии то наверно=).

  
* датабейс админ- меньше чем 60 % от зарплаты риал программиста,  ну хотя если потратить с десяток лет, и попасть в норм компани то 
                  можно и до 100% дойти, но не советую. В любом случае вы будете и работать с базами, и самим придется как-нибуть 
                  проектировать.

Язык который я выбрал для тебя это JavaScript. Его основная функция добавлять интерактивность сайту. Любое движение на сайте, даже 
если что-то дернулось, мигнуло, крутанулось, выпрыгнула минюшка, или сбоку какая-то панель мигает - это JavaScript. То есть он 
отвечает за лицевую (Front-end) часть сайта. Сама разметка страницы происходит благодаря HTML. Это как декартовая плосткость как
в школе - "точка находится на такихто координатах по Х и на таких то координатах по Y ). Понятно что это аналогия и разметка там 
по другому происходит. Ну с нуля я думаю вы за неделю а может и за пару дней разберетесь.. в этим HTML. "Изи катка" сказал бы задрот.
Два понятия объяснил, осталось CSS. Это "каскадные таблицы стилей", звучит страшно, то это просто кусок текста, в котором перечислены:
"Эти меню пусть будет красной, эта кнопка голубой, а при неаведения мышки на эту кнопку она станет чутку темнее. Ну просто покрасить."
Так вот.. HTML, СSS, сверху можно еще фотошоп и будет веб-дизайнер(по другому - "верстальщик"). Но фронт-енд разработчик в первую
очередь должен быть ближе к программисту, а не ходожникам и дизайнерам. Он специалист по JavaScript, а HTML и СSS должен знать каждый,
это как знать таблицу умножения до 5 цифр.. можно вообще за один день с ними разобраться. Короче говоря я пытаюсь вам объяснить чем
же вы будете раниматься. Так вот вы Javascript developer, но если вамс попросят поменять шрифт в названии сайта - вы это сделаете,
или там цвет где-то изменить с голубого, где пидар дизайнер нагеройствовал. Так вот Front-end developer(Front-end developer) это
на 80% javascript, 15% HTML и 5% CSS. Да может по началу вы можете и поверстать побольше, ну это просто потому что джуниору в первый
 или первые месяца не доверяют. Вот пример - я пишу логику а не морду сайта, а мне сказали пофиксить один баг не вронт-енде, 
 скзали пока так, но к счастью это было один раз =). Javascript может на ходу менять HTNL(положение), CSS(цвет и характеристика), что
 значит что вы на ходу можете менять страницу.
 
 Теперь когда у вас примерное представление о том чем вы будете заниматься, объясню почему Javascript становится популярнее.
 Нугружать и делать тяжелее сервер всегда дорого, а наши компы, ноутбуки и телефоны все лучше и мощнее, и если перенести часть логики
 на фронт-енд - вы разгружаете сервер, дело в том что все что проиходит на фронт-енде задействует ваш ПК, и сервер который находится
 гдето в другом городе, или стране, не напрягается. Я подозреваю что можно создать.

  




ае 8880 вт



